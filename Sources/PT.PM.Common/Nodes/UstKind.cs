namespace PT.PM.Common.Nodes
{
    public enum UstKind
    {
        RootUst = 500,

        // Global Scope
        Attribute = 400,
        AttributeSection,
        Comment,
        Constraint,
        DelegateDeclaration,
        ExternAliasDeclaration,
        NamespaceDeclaration,
        NewLineNode,
        PreProcessorDirective,
        TextNode,
        TypeDeclaration,
        TypeParameterDeclaration,
        UsingAliasDeclaration,
        UsingDeclaration,
        WhitespaceNode,

        // Type Members
        Accessor = 300,
        ConstructorDeclaration,
        DestructorDeclaration,
        EnumMemberDeclaration,
        EventDeclaration,
        FieldDeclaration,
        FixedFieldDeclaration,
        FixedVariableInitializer,
        IndexerDeclaration,
        MethodDeclaration,
        OperatorDeclaration,
        ParameterDeclaration,
        PropertyDeclaration,
        VariableInitializer,

        // Body
        Statement = 200,
        BlockStatement,
        BreakStatement,
        ContinueStatement,
        DoWhileStatement,
        EmptyStatement,
        ExpressionStatement,
        ForeachStatement,
        ForStatement,
        GotoStatement,
        IfElseStatement,
        LabelStatement,
        ReturnStatement,
        SwitchStatement,
        SwitchSection,
        CaseLabel,
        ThrowStatement,
        TryCatchStatement,
        CatchClause,
        UncheckedStatement,
        UsingStatement,
        VariableDeclarationExpression,
        WithStatement,
        WhileStatement,
        YieldBreakStatement,
        YieldReturnStatement,

        // Expression
        Expression = 100,
        AnonymousMethodExpression,
        AnonymousTypeCreateExpression,
        ArrayCreationExpression,
        ArrayInitializerExpression,
        AssignmentExpression,
        BaseReferenceExpression,
        BinaryOperatorExpression,
        CastExpression,
        ConditionalExpression,
        DefaultValueExpression,
        DirectionExpression,
        ErrorExpression,
        IdentifierExpression,
        IndexerExpression,
        InvocationExpression,
        IsExpression,
        LambdaExpression,
        MemberReferenceExpression,
        NamedArgumentExpression,
        NamedExpression,
        NullLiteral,
        ObjectCreateExpression,
        ParenthesizedExpression,
        PointerReferenceExpression,
        PrimitiveExpression,
        QueryExpression,
        SizeOfExpression,
        StackAllocExpression,
        ThisReferenceToken,
        TypeOfExpression,
        TypeReferenceExpression,
        UnaryOperatorExpression,
        UncheckedExpression,
        UndocumentedExpression,

        // Literals
        Literal = 1,
        StringLiteral,
        TypeToken,
        TypeTypeLiteral,
        ModifierLiteral,
        IdToken,
        FloatLiteral,
        BooleanLiteral,
        IntLiteral,
        ClassType,
        Modifier,
        ParameterModifierLiteral,
        BinaryOperatorLiteral,
        UnaryOperatorLiteral,
        CommentLiteral,

        // Specific
        AsExpression,
        CheckedStatement,
        CheckedExpression,
        FixedStatement,
        LockStatement,
        CSharpParameterDeclaration,
        UnsafeStatement,

        // Collection
        Collection,
        ArgsUst,
        EntitiesUst,

        // Artificial
        MultichildExpression,
        StatementDeclaration,
        TypeDeclarationStatement,
        WrapperStatement,
        NotImplementedUst,
        WrapperExpression,

        // Pattern
        Pattern
    }
}
